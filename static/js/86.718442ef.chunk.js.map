{"version":3,"file":"static/js/86.718442ef.chunk.js","mappings":"0OAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,KAAM,ECCvD,EAA0B,0BAA1B,EAA4D,wBAA5D,EAA2F,uBAA3F,EAA0H,wBAA1H,EAAwJ,sBAAxJ,EAAuL,6C,SCG1KC,EAAW,SAAHC,GAOd,IANLC,EAAED,EAAFC,GACAC,EAAIF,EAAJE,KACAC,EAAMH,EAANG,OACAN,EAAMG,EAANH,OACAO,EAASJ,EAATI,UACAC,EAAWL,EAAXK,YAEMC,GAAWC,EAAAA,EAAAA,MAYjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAcG,IAAKV,EAAQW,IAAKZ,KAEhDM,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYC,SAAA,EAC1BH,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAaC,SAAA,CAAEd,EAAOkB,eAAe,SAAS,cAC5DP,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAaC,SAAA,CACxBP,EAAUW,eAAe,SAAS,oBAIvCH,EAAAA,EAAAA,KAAA,UACEH,UAAWJ,EAAcK,EAAgBA,EACzCM,KAAK,SACLC,QAxBe,WACnBX,GACEY,EAAAA,EAAAA,GACEb,EACI,CAAEJ,GAAAA,EAAIG,UAAWA,EAAY,EAAGC,aAAa,GAC7C,CAAEJ,GAAAA,EAAIG,UAAWA,EAAY,EAAGC,aAAa,IAGvD,EAgB4BM,SAErBN,EAAc,YAAc,aAIrC,EC3CA,EAAuB,wB,SCKVc,EAAY,WACvB,IAAMrB,GAAQsB,EAAAA,EAAAA,IAAYzB,GAE1B,OACEiB,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAYC,SACxBb,EAAMuB,KAAI,SAAArB,GAAA,IAAGC,EAAED,EAAFC,GAAOqB,GAASC,EAAAA,EAAAA,GAAAvB,EAAAwB,GAAA,OAC5BZ,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACb,GAAQ0B,EAAAA,EAAAA,GAAA,CAACxB,GAAIA,GAAQqB,KADfrB,EAEJ,KAIb,E,iBCjBA,EAAuB,uBCIVyB,EAAW,SAAH1B,GAA0B,IAApB2B,EAAE3B,EAAF2B,GAAIhB,EAAQX,EAARW,SAC7B,OACEH,EAAAA,EAAAA,MAACoB,EAAAA,GAAI,CAACnB,UAAWC,EAAaiB,GAAIA,EAAGhB,SAAA,EACnCC,EAAAA,EAAAA,KAACiB,EAAAA,IAAW,IACXlB,IAGP,ECWA,EAhBmB,WACjB,IAAML,GAAWC,EAAAA,EAAAA,MAMjB,OAJAuB,EAAAA,EAAAA,YAAU,WACRxB,GAASyB,EAAAA,EAAAA,KACX,GAAG,CAACzB,KAGFE,EAAAA,EAAAA,MAAA,QAAAG,SAAA,EACEC,EAAAA,EAAAA,KAACc,EAAQ,CAACC,GAAG,IAAGhB,SAAC,2BAEjBC,EAAAA,EAAAA,KAACO,EAAS,MAGhB,C","sources":["redux/tweets/selectors.js","webpack://goit-react-test-tweet-cards/./src/components/UserCard/UserCard.module.css?416f","components/UserCard/UserCard.jsx","webpack://goit-react-test-tweet-cards/./src/components/UsersList/UsersList.module.css?09e2","components/UsersList/UsersList.jsx","webpack://goit-react-test-tweet-cards/./src/components/BackLink/BackLink.module.css?aa43","components/BackLink/BackLink.jsx","pages/TweetsPage.jsx"],"sourcesContent":["export const selectUsers = state => state.tweets.users;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"UserCard_wrapper__wKH4n\",\"image\":\"UserCard_image__EioKu\",\"info\":\"UserCard_info__Eq+Ym\",\"stats\":\"UserCard_stats__8PX26\",\"btn\":\"UserCard_btn__3EaGU\",\"active\":\"UserCard_active__Xq6J3 UserCard_btn__3EaGU\"};","import { useDispatch } from 'react-redux';\nimport styles from './UserCard.module.css';\nimport { editUser } from '../../redux/tweets/operations';\n\nexport const UserCard = ({\n  id,\n  user,\n  avatar,\n  tweets,\n  followers,\n  isFollowing,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleUpdate = () => {\n    dispatch(\n      editUser(\n        isFollowing\n          ? { id, followers: followers - 1, isFollowing: false }\n          : { id, followers: followers + 1, isFollowing: true }\n      )\n    );\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <img className={styles.image} src={avatar} alt={user} />\n\n      <div className={styles.info}>\n        <p className={styles.stats}>{tweets.toLocaleString('en-US')} Tweets</p>\n        <p className={styles.stats}>\n          {followers.toLocaleString('en-US')} Followers\n        </p>\n      </div>\n\n      <button\n        className={isFollowing ? styles.active : styles.btn}\n        type=\"button\"\n        onClick={handleUpdate}\n      >\n        {isFollowing ? 'Following' : 'Follow'}\n      </button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"UsersList_list__cvnrs\"};","import { useSelector } from 'react-redux';\nimport { selectUsers } from '../../redux/tweets/selectors';\nimport { UserCard } from '../UserCard/UserCard';\n\nimport styles from './UsersList.module.css';\n\nexport const UsersList = () => {\n  const users = useSelector(selectUsers);\n\n  return (\n    <ul className={styles.list}>\n      {users.map(({ id, ...restProps }) => (\n        <li key={id}>\n          <UserCard id={id} {...restProps} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"BackLink_link__Echxs\"};","import { Link } from 'react-router-dom';\nimport { ImArrowLeft } from 'react-icons/im';\n\nimport styles from './BackLink.module.css';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <Link className={styles.link} to={to}>\n      <ImArrowLeft />\n      {children}\n    </Link>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchUsers } from '../redux/tweets/operations';\nimport { UsersList } from '../components/UsersList/UsersList';\n\nimport { BackLink } from '../components/BackLink/BackLink';\n\nconst TweetsPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n\n  return (\n    <main>\n      <BackLink to=\"/\">Back to the Home Page</BackLink>\n\n      <UsersList />\n    </main>\n  );\n};\n\nexport default TweetsPage;\n"],"names":["selectUsers","state","tweets","users","UserCard","_ref","id","user","avatar","followers","isFollowing","dispatch","useDispatch","_jsxs","className","styles","children","_jsx","src","alt","toLocaleString","type","onClick","editUser","UsersList","useSelector","map","restProps","_objectWithoutProperties","_excluded","_objectSpread","BackLink","to","Link","ImArrowLeft","useEffect","fetchUsers"],"sourceRoot":""}